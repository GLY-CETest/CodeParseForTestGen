[{"code":"public class Day extends CalendarUnit {\r\n\r\n    private Month m;\r\n\r\n    public Day(int pDay, Month m) {\r\n        setDay(pDay, m);\r\n    }\r\n\r\n    public boolean increment() {\r\n        currentPos += 1;\r\n        if (currentPos <= m.getMonthSize())\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    public void setDay(int pDay, Month m) {\r\n        setCurrentPos(pDay);\r\n        this.m = m;\r\n        if (!this.isValid()) {\r\n            throw new IllegalArgumentException(\"Not a valid day\");\r\n        }\r\n    }\r\n\r\n    public int getDay() {\r\n        return currentPos;\r\n    }\r\n\r\n    public boolean isValid() {\r\n        if (m != null && m.isValid())\r\n            if (this.currentPos >= 1 && this.currentPos <= m.getMonthSize())\r\n                return true;\r\n        return false;\r\n    }\r\n\r\n    public boolean equals(Object o) {\r\n        if (o instanceof Day) {\r\n            if (this.currentPos == ((Day) o).currentPos && this.m.equals(((Day) o).m))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n}","name":"Day","type":"class"},{"parent":"Day","code":"public boolean increment() {\r\n\t\tcurrentPos += 1;\r\n\t\tif (currentPos <= m.getMonthSize())\r\n\t\t\treturn true;\r\n\t\telse\r\n\t\t\treturn false;\r\n\t}","children":"increment","signature":"increment()","name":"increment","start_line":9,"comment":"","type":"method","parameters":"[]","parentType":"class","end_line":15},{"parent":"Day","code":"public void setDay(int pDay, Month m) {\r\n\t\tsetCurrentPos(pDay);\r\n\t\tthis.m = m;\r\n\t\tif (!this.isValid()) {\r\n\t\t\tthrow new IllegalArgumentException(\"Not a valid day\");\r\n\t\t}\r\n\t}","children":"setDay","signature":"setDay(int, Month)","name":"setDay","start_line":17,"comment":"","type":"method","parameters":"[int pDay, Month m]","parentType":"class","end_line":23},{"parent":"Day","code":"public int getDay() {\r\n\t\treturn currentPos;\r\n\t}","children":"getDay","signature":"getDay()","name":"getDay","start_line":25,"comment":"","type":"method","parameters":"[]","parentType":"class","end_line":27},{"parent":"Day","code":"public boolean isValid() {\r\n\t\tif (m != null && m.isValid())\r\n\t\t\tif (this.currentPos >= 1 && this.currentPos <= m.getMonthSize())\r\n\t\t\t\treturn true;\r\n\t\treturn false;\r\n\r\n\t}","children":"isValid","signature":"isValid()","name":"isValid","start_line":29,"comment":"","type":"method","parameters":"[]","parentType":"class","end_line":35},{"parent":"Day","code":"public boolean equals(Object o) {\r\n\t\tif (o instanceof Day) {\r\n\t\t\tif (this.currentPos == ((Day) o).currentPos\r\n\t\t\t\t\t&& this.m.equals(((Day) o).m))\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}","children":"equals","signature":"equals(Object)","name":"equals","start_line":37,"comment":"","type":"method","parameters":"[Object o]","parentType":"class","end_line":44}]