[{"code":"public class Month extends CalendarUnit {\r\n\r\n    private Year y;\r\n\r\n    private int[] sizeIndex = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };\r\n\r\n    public Month(int pMonth, Year y) {\r\n        setMonth(pMonth, y);\r\n    }\r\n\r\n    public void setMonth(int pMonth, Year y) {\r\n        setCurrentPos(pMonth);\r\n        this.y = y;\r\n        if (!this.isValid()) {\r\n            throw new IllegalArgumentException(\"Not a valid month\");\r\n        }\r\n    }\r\n\r\n    public int getMonth() {\r\n        return currentPos;\r\n    }\r\n\r\n    public int getMonthSize() {\r\n        if (y.isLeap())\r\n            sizeIndex[1] = 29;\r\n        else\r\n            sizeIndex[1] = 28;\r\n        return sizeIndex[currentPos - 1];\r\n    }\r\n\r\n    public boolean increment() {\r\n        currentPos += 1;\r\n        if (currentPos > 12)\r\n            return false;\r\n        else\r\n            return true;\r\n    }\r\n\r\n    public boolean isValid() {\r\n        if (y != null && y.isValid())\r\n            if (this.currentPos >= 1 && this.currentPos <= 12)\r\n                return true;\r\n        return false;\r\n    }\r\n\r\n    public boolean equals(Object o) {\r\n        if (o instanceof Month) {\r\n            if (this.currentPos == ((Month) o).currentPos && this.y.equals(((Month) o).y))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n}","name":"Month","type":"class"},{"parent":"Month","code":"public void setMonth(int pMonth, Year y) {\r\n\t\tsetCurrentPos(pMonth);\r\n\t\tthis.y = y;\r\n\t\tif (!this.isValid()) {\r\n\t\t\tthrow new IllegalArgumentException(\"Not a valid month\");\r\n\t\t}\r\n\t}","children":"setMonth","signature":"setMonth(int, Year)","name":"setMonth","start_line":10,"comment":"","type":"method","parameters":"[int pMonth, Year y]","parentType":"class","end_line":16},{"parent":"Month","code":"public int getMonth() {\r\n\t\treturn currentPos;\r\n\t}","children":"getMonth","signature":"getMonth()","name":"getMonth","start_line":18,"comment":"","type":"method","parameters":"[]","parentType":"class","end_line":20},{"parent":"Month","code":"public int getMonthSize() {\r\n\t\tif (y.isLeap())\r\n\t\t\tsizeIndex[1] = 29;\r\n\t\telse\r\n\t\t\tsizeIndex[1] = 28;\r\n\t\treturn sizeIndex[currentPos - 1];\r\n\t}","children":"getMonthSize","signature":"getMonthSize()","name":"getMonthSize","start_line":22,"comment":"","type":"method","parameters":"[]","parentType":"class","end_line":28},{"parent":"Month","code":"public boolean increment() {\r\n\t\tcurrentPos += 1;\r\n\t\tif (currentPos > 12)\r\n\t\t\treturn false;\r\n\t\telse\r\n\t\t\treturn true;\r\n\t}","children":"increment","signature":"increment()","name":"increment","start_line":30,"comment":"","type":"method","parameters":"[]","parentType":"class","end_line":36},{"parent":"Month","code":"public boolean isValid() {\r\n\t\tif (y != null && y.isValid())\r\n\t\t\tif (this.currentPos >= 1 && this.currentPos <= 12)\r\n\t\t\t\treturn true;\r\n\t\treturn false;\r\n\r\n\t}","children":"isValid","signature":"isValid()","name":"isValid","start_line":38,"comment":"","type":"method","parameters":"[]","parentType":"class","end_line":44},{"parent":"Month","code":"public boolean equals(Object o) {\r\n\t\tif (o instanceof Month) {\r\n\t\t\tif (this.currentPos == ((Month) o).currentPos\r\n\t\t\t\t\t&& this.y.equals(((Month) o).y))\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}","children":"equals","signature":"equals(Object)","name":"equals","start_line":46,"comment":"","type":"method","parameters":"[Object o]","parentType":"class","end_line":53}]